;BUBBLE
STACK1			SEGMENT PARA STACK
STACK_AREA		DW		100H DUP(?)
STACK_BOTTOM	EQU		$-STACK_AREA
STACK1			ENDS

DATA1		SEGMENT PARA
TABLE_LEN	DW		16
TABLE		DW		200,300,400,10,20,0,1,8
			DW		41H,40,42H,50,60,0FFFFH,2,3
RESULT		DB		5 DUP(?),20H,'$'
NEW_LINE	DB		0DH,0AH,'$'
DATA1		ENDS

CODE1	SEGMENT	PARA
		ASSUME	CS:CODE1,DS:DATA1,SS:STACK1
		
MAIN	PROC	FAR
		MOV		AX,		STACK1
		MOV		SS,		AX
		MOV		SP,		STACK_BOTTOM
		MOV		AX,		DATA1
		MOV		DS,		AX

PART1:	MOV		CX,		TABLE_LEN
		MOV		SI,		OFFSET TABLE

LP1:	PUSH	CX
		MOV		CX,		5
		MOV		DI,		OFFSET RESULT+4
		MOV		AX,		[SI]
		MOV		BX,		10

LP1_1:	XOR		DX,		DX
		DIV		BX
		OR		DL,		30H
		MOV		[DI],	DL
		DEC		DI
		LOOP	LP1_1

		MOV		DX,		OFFSET RESULT
		MOV		AH,		9
		INT		21H
		INC		SI
		INC		SI
		POP		CX
		LOOP	LP1

		MOV		DX,		OFFSET NEW_LINE
		MOV		AH,		9
		INT		21H

PART2:	MOV		CX,		TABLE_LEN
		DEC		CX

LP2:	MOV		BX,		1
		MOV		SI,		OFFSET TABLE
		PUSH	CX

LP2_1:	MOV		AX,		[SI]
		CMP		AX,		[SI+2]
		JBE		CONTINUE
		XCHG	AX,		[SI+2]
		MOV		[SI],	AX
		MOV		BX,		0

CONTINUE:
		ADD		SI,		2
		LOOP	LP2_1

		POP		CX
		DEC		CX
		CMP		BX,		1
		JZ		PART3
		JMP		SHORT LP2

PART3:	MOV		CX,		TABLE_LEN
		MOV		SI,		OFFSET TABLE

LP3:	PUSH	CX
		MOV		CX,		5
		MOV		DI,		OFFSET RESULT+4
		MOV		AX,		[SI]
		MOV		BX,		10

LP3_1:	XOR		DX,		DX
		DIV		BX
		OR		DL,		30H
		MOV		[DI],	DL
		DEC		DI
		LOOP	LP3_1

		MOV		DX,		OFFSET RESULT
		MOV		AH,		9
		INT		21H
		INC		SI
		INC		SI
		POP		CX
		LOOP	LP3

		MOV		DX,		OFFSET NEW_LINE
		MOV		AH,		9
		INT		21H

EXIT:	MOV		AX,		4C00H
		INT		21H

MAIN	ENDP

CODE1	ENDS
		END		MAIN
