;STRORD_VLEN_NOCASE

STACK1			SEGMENT PARA STACK
STACK_AREA		DW		100H DUP(?)
STACK_BOTTOM	EQU 	$-STACK_AREA
STACK1			ENDS

DATA1		SEGMENT PARA
MAXNUM		EQU		200
LEN			DW		?
STR			DB		'14231006',MAXNUM DUP(?)
STRN		DB		'14231006',MAXNUM DUP(?)
NEW_LINE	DB		0DH,0AH,'$'
DATA1		ENDS

CODE1		SEGMENT	PARA
			ASSUME	CS:CODE1, DS:DATA1, SS:STACK1

MAIN		PROC	FAR
			MOV		AX,		STACK1
			MOV		SS,		AX
			MOV		SP,		STACK_BOTTOM
			MOV		AX,		DATA1
			MOV		DS,		AX

			XOR		CX,		CX
			MOV		SI,		OFFSET STRN+8
			MOV		DI,		OFFSET STR+8
INPUT:		MOV		AH,		1
			INT		21H
			CMP		AL,		0DH
			JZ		NEWLINE
			MOV		[DI],	AL
			CALL	TOLOWER
			INC		CX
			INC		SI
			INC		DI
			JMP		INPUT
NEWLINE:	MOV		LEN,	CX
			MOV		AL,		24H
			MOV		[DI],	AL

			MOV		DX,		OFFSET STR
			MOV		AH,		9
			INT		21H
			MOV		DX,		OFFSET NEW_LINE
			MOV		AH,		9
			INT		21H

			CALL	STRSORT

			MOV		AX,		4C00H
			INT		21H
MAIN		ENDP

TOLOWER		PROC
			CMP		AL,		41H
			JB		LABNEXT
			CMP		AL,		5AH
			JA		LABNEXT
			ADD		AL,		20H
LABNEXT:	MOV		[SI],	AL
			RET
TOLOWER		ENDP

STRSORT		PROC
			MOV		CX,		LEN
			ADD		CX,		8
			DEC		CX

LP:			MOV		BX,		1
			MOV		SI,		OFFSET STRN
			MOV		DI,		OFFSET STR

			PUSH	CX

SUBLP:		MOV		AL,		[SI]
			CMP		AL,		[SI+1]
			JBE		CONTINUE
			XCHG	AL,		[SI+1]
			MOV		[SI],	AL
			MOV		DL,		[DI]
			XCHG	DL,		[DI+1]
			MOV		[DI],	DL
			MOV		BX,		0

CONTINUE:	INC		SI
			INC		DI
			LOOP	SUBLP
			POP		CX
			DEC		CX
			CMP		BX,		1
			JZ		PRINT
			JMP		SHORT	LP

PRINT:		MOV		DX,		OFFSET STR
			MOV		AH,		9
			INT		21H
			RET
STRSORT		ENDP

CODE1		ENDS
			END		MAIN